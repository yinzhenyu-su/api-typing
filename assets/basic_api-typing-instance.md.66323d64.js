import{_ as n,c as a,o as s,a as t}from"./app.9281e1f2.js";const A=JSON.parse('{"title":"ApiTypingInstance","description":"","frontmatter":{},"headers":[{"level":2,"title":"创建 ApiTypingInstance","slug":"创建-apitypinginstance","link":"#创建-apitypinginstance","children":[]},{"level":2,"title":"ApiTypingInstance 的属性和方法","slug":"apitypinginstance-的属性和方法","link":"#apitypinginstance-的属性和方法","children":[]}],"relativePath":"basic/api-typing-instance.md"}'),e={name:"basic/api-typing-instance.md"},p=t(`<h1 id="apitypinginstance" tabindex="-1">ApiTypingInstance <a class="header-anchor" href="#apitypinginstance" aria-hidden="true">#</a></h1><h2 id="创建-apitypinginstance" tabindex="-1">创建 ApiTypingInstance <a class="header-anchor" href="#创建-apitypinginstance" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createHTTPClient</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">api-typing</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 调用createHTTPClient接口会创建ApiTypingInstance</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ApiTypingInstance 可以用来发送请求，设置当前请求参数等</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> instance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createHTTPClient</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre></div><h2 id="apitypinginstance-的属性和方法" tabindex="-1">ApiTypingInstance 的属性和方法 <a class="header-anchor" href="#apitypinginstance-的属性和方法" aria-hidden="true">#</a></h2><p>instance#get(url[, config])</p><p>instance#delete(url[, data[, config]])</p><p>instance#head(url[, config])</p><p>instance#options(url[, config])</p><p>instance#post(url[, data[, config]])</p><p>instance#put(url[, data[, config]])</p><p>instance#patch(url[, data[, config]])</p><p>instance#defaults</p><p>instance#interceptors</p><p>instance#cancelToken()</p><p>如果你用过 axios 就会发现这里的属性和方法与 axios 非常相似，实际上这就是继承自 AxiosInstance 的。</p>`,15),i=[p];function c(l,o,r,y,d,g){return s(),a("div",null,i)}const _=n(e,[["render",c]]);export{A as __pageData,_ as default};
